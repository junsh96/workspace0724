CREATE TABLE T_EMP(
    EMP_NO NUMBER PRIMARY KEY,
    EMP_ID VARCHAR2(30) UNIQUE,
    EMP_NAME VARCHAR2(100),
    EMP_PWD VARCHAR2(100) NOT NULL,
    EMP_DEPT VARCHAR2(30) REFERENCES T_DEPT(DEPT_CODE)ON DELETE SET NULL,
    EMP_JOB VARCHAR2(30) REFERENCES T_JOB(JOB_CODE)ON DELETE SET NULL,
    SALARY NUMBER,
    HIRE_DATE DATE DEFAULT SYSDATE,
    BIRT_DATE DATE NOT NULL,
    EMP_STATUS CHAR(5) CHECK(EMP_STATUS IN ('Y','N')) DEFAULT 'Y',
    QUIT_DATE DATE
);

ALTER TABLE T_EMP ADD QUIT_DATE DATE;

    


CREATE SEQUENCE SEQ_EMPSEQ
START WITH 1
INCREMENT BY 1
MAXVALUE 500
NOCYCLE
NOCACHE;

COMMENT ON COLUMN "T_EMP"."EMP_NO" IS '사원번호';
COMMENT ON COLUMN "T_EMP"."EMP_ID" IS '사원아이디';
COMMENT ON COLUMN "T_EMP"."EMP_NAME" IS '사원명';
COMMENT ON COLUMN "T_EMP"."EMP_PWD" IS '비밀번호';
COMMENT ON COLUMN "T_EMP"."EMP_DEPT" IS '부서';
COMMENT ON COLUMN "T_EMP"."EMP_JOB" IS '직급';
COMMENT ON COLUMN "T_EMP"."SALARY" IS '연봉';
COMMENT ON COLUMN "T_EMP"."HIRE_DATE" IS '입사일';
COMMENT ON COLUMN "T_EMP"."BIRT_DATE" IS '생일';
COMMENT ON COLUMN "T_EMP"."EMP_STATUS" IS '퇴사여부';
COMMENT ON COLUMN "T_EMP"."QUIT_DATE" IS '톼사일';

CREATE OR REPLACE TRIGGER INSERT_EMP
AFTER INSERT
ON T_EMP
FOR EACH ROW
BEGIN
    IF(:NEW.EMP_STATUS = 'Y')
        THEN UPDATE T_DEPT
        SET DEPT_EMP_CNT = DEPT_EMP_CNT + 1
        WHERE DEPT_CODE = :NEW.EMP_DEPT;
        
        UPDATE T_JOB
        SET JOB_EMP_CNT = JOB_EMP_CNT + 1
        WHERE JOB_CODE = :NEW.EMP_JOB;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER UPDATE_EMP
AFTER UPDATE
ON T_EMP
FOR EACH ROW
BEGIN
    IF(:NEW.EMP_STATUS = 'Y')
        THEN UPDATE T_DEPT
        SET DEPT_EMP_CNT = DEPT_EMP_CNT + 1
        WHERE DEPT_CODE = :NEW.EMP_DEPT;
        
        UPDATE T_DEPT
        SET DEPT_EMP_CNT = DEPT_EMP_CNT - 1
        WHERE DEPT_CODE = :OLD.EMP_DEPT;
        
        UPDATE T_JOB
        SET JOB_EMP_CNT = JOB_EMP_CNT + 1
        WHERE JOB_CODE = :NEW.EMP_JOB;
        
        UPDATE T_JOB
        SET JOB_EMP_CNT = JOB_EMP_CNT - 1
        WHERE JOB_CODE = :OLD.EMP_JOB;
    ELSE
        UPDATE T_DEPT
        SET DEPT_EMP_CNT = DEPT_EMP_CNT - 1
        WHERE DEPT_CODE = :OLD.EMP_DEPT;
        
        UPDATE T_JOB
        SET JOB_EMP_CNT = JOB_EMP_CNT - 1
        WHERE JOB_CODE = :OLD.EMP_JOB;
    END IF;
END;
/


COMMIT;

CREATE TABLE T_DEPT(
    DEPT_NO NUMBER PRIMARY KEY,
    DEPT_CODE VARCHAR2(30) UNIQUE,
    DEPT_NAME VARCHAR2(30) UNIQUE,
    DEPT_EMP_CNT NUMBER DEFAULT 0
);


CREATE SEQUENCE SEQ_DEPTSEQ
START WITH 1
INCREMENT BY 1
MAXVALUE 500
NOCYCLE
NOCACHE;

COMMENT ON COLUMN "T_DEPT"."DEPT_NO" IS '부서번호';
COMMENT ON COLUMN "T_DEPT"."DEPT_CODE" IS '부서코드';
COMMENT ON COLUMN "T_DEPT"."DEPT_NAME" IS '부서명';
COMMENT ON COLUMN "T_DEPT"."DEPT_EMP_CNT" IS '부서 내 사원수';


CREATE TABLE T_JOB(
    JOB_NO NUMBER PRIMARY KEY,
    JOB_CODE VARCHAR2(30) UNIQUE,
    JOB_NAME VARCHAR2(30) UNIQUE,
    JOB_EMP_CNT NUMBER DEFAULT(0)
);



CREATE SEQUENCE SEQ_JOBSEQ
START WITH 1
INCREMENT BY 1
MAXVALUE 500
NOCYCLE
NOCACHE;

COMMENT ON COLUMN "T_JOB"."JOB_NO" IS '직급번호';
COMMENT ON COLUMN "T_JOB"."JOB_CODE" IS '직급코드';
COMMENT ON COLUMN "T_JOB"."JOB_NAME" IS '직급명';
COMMENT ON COLUMN "T_JOB"."JOB_EMP_CNT" IS '사내 해당 직급 인원';

CREATE TABLE T_ITEM(
    ITEM_NO NUMBER PRIMARY KEY,
    ITEM_CODE VARCHAR2(30) UNIQUE,
    ITEM_NAME VARCHAR2(30) UNIQUE,
    ITEM_PRICE NUMBER ,
    ITEM_CNT NUMBER DEFAULT 0,
    ITEM_REQ_ID VARCHAR2(30)REFERENCES T_EMP(EMP_ID)ON DELETE SET NULL
);


CREATE SEQUENCE SEQ_ITEMSEQ
START WITH 1
INCREMENT BY 1
MAXVALUE 500
NOCYCLE
NOCACHE;

COMMENT ON COLUMN "T_ITEM"."ITEM_NO" IS '물품번호';
COMMENT ON COLUMN "T_ITEM"."ITEM_CODE" IS '물품코드';
COMMENT ON COLUMN "T_ITEM"."ITEM_NAME" IS '물품명';
COMMENT ON COLUMN "T_ITEM"."ITEM_PRICE" IS '물품가격';
COMMENT ON COLUMN "T_ITEM"."ITEM_CNT" IS '물품갯수';
COMMENT ON COLUMN "T_ITEM"."ITEM_REQ_ID" IS '물품요청자';

CREATE TABLE T_ITEM_ORDER(
    ORDER_NO NUMBER PRIMARY KEY,
    ITEM_CODE VARCHAR2(30) REFERENCES T_ITEM(ITEM_CODE) ON DELETE SET NULL ,
    ORDER_CNT NUMBER DEFAULT(1),
    ORDER_STATE CHAR(5) CHECK(ORDER_STATE IN ('R','O','C','D')),
    REQ_DATE DATE DEFAULT SYSDATE,
    ORDER_CANCEL_REASON VARCHAR2(200),
    ORDER_REQ_ID VARCHAR2(30) REFERENCES T_EMP(EMP_ID)ON DELETE SET NULL ,
    ORDER_RES_ID VARCHAR2(30) REFERENCES T_EMP(EMP_ID)ON DELETE SET NULL
);

CREATE SEQUENCE SEQ_ORDSEQ
START WITH 1
INCREMENT BY 1
MAXVALUE 500
NOCYCLE
NOCACHE;

COMMENT ON COLUMN "T_ITEM_ORDER"."ORDER_NO" IS '요청번호';
COMMENT ON COLUMN "T_ITEM_ORDER"."ITEM_CODE" IS '물품코드';
COMMENT ON COLUMN "T_ITEM_ORDER"."ORDER_CNT" IS '요청갯수';
COMMENT ON COLUMN "T_ITEM_ORDER"."ORDER_STATE" IS '요청상태';
COMMENT ON COLUMN "T_ITEM_ORDER"."REQ_DATE" IS '요청일';
COMMENT ON COLUMN "T_ITEM_ORDER"."ORDER_CANCEL_REASON" IS '반려사유';
COMMENT ON COLUMN "T_ITEM_ORDER"."ORDER_REQ_ID" IS '요청자';
COMMENT ON COLUMN "T_ITEM_ORDER"."ORDER_RES_ID" IS '승인자';

CREATE TABLE T_ITEM_USE(
    REQ_NO NUMBER PRIMARY KEY,
    ITEM_CODE VARCHAR2(30) REFERENCES T_ITEM(ITEM_CODE)ON DELETE SET NULL,
    REQ_CNT NUMBER DEFAULT(1),
    REQ_STATE CHAR(5) CHECK(REQ_STATE IN ('R','O','C','D')),
    REQ_DATE DATE DEFAULT SYSDATE,
    REQ_CANCEL_REASON VARCHAR2(200),
    REQ_ID VARCHAR2(30)REFERENCES T_EMP(EMP_ID)ON DELETE SET NULL,
    RES_ID VARCHAR2(30) REFERENCES T_EMP(EMP_ID)ON DELETE SET NULL
);

CREATE SEQUENCE SEQ_REQSEQ
START WITH 1
INCREMENT BY 1
MAXVALUE 500
NOCYCLE
NOCACHE;

COMMENT ON COLUMN "T_ITEM_USE"."REQ_NO" IS '사용요청번호';
COMMENT ON COLUMN "T_ITEM_USE"."ITEM_CODE" IS '물품코드';
COMMENT ON COLUMN "T_ITEM_USE"."REQ_CNT" IS '요청갯수';
COMMENT ON COLUMN "T_ITEM_USE"."REQ_STATE" IS '요청상태';
COMMENT ON COLUMN "T_ITEM_USE"."REQ_DATE" IS '요청일';
COMMENT ON COLUMN "T_ITEM_USE"."REQ_CANCEL_REASON" IS '반려사유';
COMMENT ON COLUMN "T_ITEM_USE"."REQ_ID" IS '요청자';
COMMENT ON COLUMN "T_ITEM_USE"."RES_ID" IS '승인자 ';

CREATE TABLE T_ITEM_INPUT(
    INPUT_NO NUMBER PRIMARY KEY,
    ITEM_CODE VARCHAR2(30) REFERENCES T_ITEM(ITEM_CODE)ON DELETE SET NULL,
    INPUT_DATE DATE DEFAULT SYSDATE,
    INPUT_CNT NUMBER DEFAULT(1),
    ORDER_NO NUMBER REFERENCES T_ITEM_ORDER(ORDER_NO)
);



CREATE SEQUENCE SEQ_INSEQ
START WITH 1
INCREMENT BY 1
MAXVALUE 500
NOCYCLE
NOCACHE;

COMMENT ON COLUMN "T_ITEM_INPUT"."INPUT_NO" IS '입고번호 ';
COMMENT ON COLUMN "T_ITEM_INPUT"."ITEM_CODE" IS '물품코드';
COMMENT ON COLUMN "T_ITEM_INPUT"."INPUT_DATE" IS '입고일';
COMMENT ON COLUMN "T_ITEM_INPUT"."INPUT_CNT" IS '입고수';



CREATE TABLE T_ITEM_OUTPUT(
    ITEM_OUTPUT_NO NUMBER PRIMARY KEY,
    ITEM_CODE VARCHAR2(30) REFERENCES T_ITEM(ITEM_CODE)ON DELETE SET NULL,
    OUTPUT_DATE DATE DEFAULT SYSDATE,
    OUTPUT_CNT NUMBER DEFAULT(1),
    REQ_NO NUMBER REFERENCES T_ITEM_USE(REQ_NO)
);

CREATE SEQUENCE SEQ_OUTSEQ
START WITH 1
INCREMENT BY 1
MAXVALUE 500
NOCYCLE
NOCACHE;
DROP TABLE ITEM_OUTPUT;

COMMENT ON COLUMN "T_ITEM_OUTPUT"."ITEM_OUTPUT_NO" IS '출고번호 ';
COMMENT ON COLUMN "T_ITEM_OUTPUT"."ITEM_CODE" IS '물품코드';
COMMENT ON COLUMN "T_ITEM_OUTPUT"."OUTPUT_DATE" IS '출고일';
COMMENT ON COLUMN "T_ITEM_OUTPUT"."OUTPUT_CNT" IS '출고수';

CREATE TABLE T_BUY_EXP_MAN(
    EXPENSE_NO NUMBER PRIMARY KEY,
    DEPOSIT NUMBER,
    DEBIT NUMBER
    
);
CREATE SEQUENCE SEQ_EXPSEQ
START WITH 1
INCREMENT BY 1
MAXVALUE 500
NOCYCLE
NOCACHE;

COMMENT ON COLUMN "T_BUY_EXP_MAN"."EXPENSE_NO" IS '자금 번호';
COMMENT ON COLUMN "T_BUY_EXP_MAN"."DEPOSIT" IS '입금액';
COMMENT ON COLUMN "T_BUY_EXP_MAN"."DEBIT" IS '출금액';



COMMIT;

SELECT * FROM USER_SEQUENCES;   

rename SEQ_REQEQ TO SEQ_REQSEQ;
        
select * from t_emp;

select * from t_job;

select * from t_dept;

select * from t_del_emp;

delete from t_del_emp where emp_no = 3;

select * from t_item;

            

        
CREATE OR REPLACE TRIGGER ITEM_PRICE
AFTER UPDATE
ON T_ITEM_ORDER
FOR EACH ROW
BEGIN
    IF(:NEW.ORDER_STATE = 'O')
        THEN INSERT INTO T_BUY_EXP_MAN(
                    EXPENSE_NO,
                    DEBIT
                ) VALUES (
                    SEQ_EXPSEQ.NEXTVAL,
                    :OLD.ORDER_CNT * (SELECT ITEM_PRICE FROM T_ITEM WHERE ITEM_CODE = :OLD.ITEM_CODE)
                );
    END IF;
END;
/
SELECT * FROM T_ITEM;

SELECT SUM(DEPOSIT)-SUM(DEBIT) AS EXPENSE FROM T_BUY_EXP_MAN;
SELECT EXPENSE FROM T_BUY_EXP_MAN
		WHERE EXPENSE_NO = (SELECT MAX(EXPENSE_NO) 
							FROM T_BUY_EXP_MAN);

ALTER TABLE T_BUY_EXP_MAN DROP COLUMN EXPENSE;

COMMIT;


CREATE OR REPLACE TRIGGER INPUT_ITEM
AFTER INSERT
ON T_ITEM_INPUT
FOR EACH ROW
BEGIN
    UPDATE T_ITEM
    SET ITEM_CNT = ITEM_CNT + :NEW.INPUT_CNT
    WHERE ITEM_CODE = :NEW.ITEM_CODE;
END;
/

CREATE OR REPLACE TRIGGER INPUT_ORDER
AFTER INSERT
ON T_ITEM_INPUT
FOR EACH ROW
BEGIN
    UPDATE T_ITEM_ORDER
    SET ORDER_STATE = 'C'
    WHERE ORDER_NO = :NEW.ORDER_NO;
END;
/



CREATE OR REPLACE TRIGGER OUTPUT_REQ
AFTER INSERT
ON T_ITEM_OUTPUT
FOR EACH ROW
BEGIN
    UPDATE T_ITEM_USE
    SET REQ_STATE = 'C'
    WHERE REQ_NO = :NEW.REQ_NO;
END;
/

CREATE OR REPLACE TRIGGER OUTPUT_ITEM
AFTER INSERT
ON T_ITEM_OUTPUT
FOR EACH ROW
BEGIN
    UPDATE T_ITEM
    SET ITEM_CNT = ITEM_CNT - :NEW.OUTPUT_CNT
    WHERE ITEM_CODE = :NEW.ITEM_CODE;
END;
/



commit;

        select * from t_dept;
        
        select * from t_job;
        
        select * from t_emp;
        
        select * from t_del_emp;
        
        select * from t_item;
        
        select * from t_item_order;
        
         select * from t_item_use;
        
        select * from t_item_input;
        
        select * from T_BUY_EXP_MAN;
