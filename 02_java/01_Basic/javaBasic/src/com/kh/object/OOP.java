package com.kh.object;

public class OOP {

	/**
	 * OOP(Object - Oriented Programming) - 객체지향 프로그래밍
	 * 
	 * 객체 지향 언어 : 세상을 객체들의 상호작용으로 모델링하여 프로그램을 구성하는 설계 방식
	 * 
	 * 객체 : 현실에서 목적과 가치가 있어 독립적으로 식별 가능한것.
	 *  ex ) 사람, 자동차, 배송 등
	 *  
	 *  객체 지향 프로그래밍 : 현실의 객체들간의 상호작용 -> 프로그래밍을 통해서 가상 세계로 구현하는것.
	 *  
	 *  클래스(class) : 객체를 만들기 위한 설계도 / 필드 = 데이터 // 메서드 = 기능
	 *  인스턴스(Instance) : 클래스로부터 new키워드를 통해 생성한 실제 메모리를 가지고있는 객체
	 *  
	 *  추상화(Abstraction) : 문제 해결에 필요한 속성과 기능만 걸러내서 단순화한 과정. 
	 *  
	 *  추상화 과정
	 *  1)내가 구현하고자하는 프로그램에서 필요한 객체가 뭘지 생각.
	 *  2)객체들의 공통적인 속성, 기능을 추출
	 *  3)추출한 것들을 내가 구현하고자 하는 프로그램의 목적에 맞게 선별
	 *  4)최종적으로 추려진 속성들을 어떤 자료형 ,어떤 변수명으로 저장할 것 인지 정의
	 *  
	 *  ex)학생관리프로그램
	 *  1. 학생 객체, 강사, 반.....
	 *  
	 *  2. 공통 속성 / 기능 수집 : 이름 , 나이 , 머리색, 키 	, 신발 사이즈, 달리기 속도,,,,,,
	 *  
	 *  3. 학생 인적사항을 관리 : 이름, 나이, 주소, 전화번호
	 *  	학생 성적 관리 : 이름, 반, 과목별 점수, 등
	 *  	학생 건강 관리 : 이름, 반, 달리기 속도, 점프력, 키 등
	 *  
	 *  4. 이름 : String name.
	 *  	나이 : int age 
	 *  
	 *  
	 * @param args
	 */
	public static void main(String[] args) {
		
	}
}
