SELECT * FROM T_ENOLLMENT;

SELECT * FROM T_STUDENT;

SELECT * FROM T_TEACHER;

SELECT * FROM T_LECTURE;

--1
SELECT TITLE,COUNT(*)
FROM T_LECTURE
JOIN T_ENOLLMENT
USING(LECTURE_ID)
GROUP BY LECTURE_ID,TITLE
HAVING COUNT(*) > 0
ORDER BY COUNT(*) DESC;

--2
SELECT TITLE,NAME,STATUS
FROM (SELECT STUDENT_ID,STATUS,LECTURE_ID
        FROM T_STUDENT
        JOIN T_ENOLLMENT
        USING(STUDENT_ID)
        WHERE STUDENT_ID =1001
        AND STATUS = 'Y')
JOIN T_LECTURE
USING(LECTURE_ID)
JOIN T_TEACHER
USING(TEACHER_ID);

SELECT TITLE,T_TEACHER.NAME,STATUS
FROM T_STUDENT
JOIN T_ENOLLMENT
USING(STUDENT_ID)
JOIN T_LECTURE
USING(LECTURE_ID)
JOIN T_TEACHER
USING(TEACHER_ID)
WHERE STUDENT_ID =1001
AND STATUS = 'Y';


--3
SELECT SUBJECT,COUNT(*) 
FROM T_LECTURE
JOIN T_TEACHER
USING(TEACHER_ID)
GROUP BY SUBJECT
ORDER BY COUNT(*);

--4
SELECT TITLE,TRUNC(AVG(GRADE_SCORE),1) 
FROM T_ENOLLMENT
JOIN T_LECTURE
USING(LECTURE_ID)
GROUP BY LECTURE_ID,TITLE
HAVING AVG(GRADE_SCORE) > 80
ORDER BY AVG(GRADE_SCORE) DESC;

--5
CREATE OR REPLACE TRIGGER TRG_01
AFTER INSERT
ON T_ENOLLMENT
FOR EACH ROW
BEGIN
   UPDATE T_LECTURE
   SET INDEX_COUNT = INDEX_COUNT+1
   WHERE LECTURE_ID = :NEW.LECTURE_ID;
END;
/

CREATE OR REPLACE TRIGGER TRG_02
AFTER DELETE
ON T_ENOLLMENT
FOR EACH ROW
BEGIN
   UPDATE T_LECTURE
   SET INDEX_COUNT = INDEX_COUNT-1
   WHERE LECTURE_ID = :OLD.LECTURE_ID;
END;
/

--TEST
SELECT * FROM T_LECTURE;

INSERT INTO T_ENOLLMENT VALUES(20,1003,5,'2025/09/01','Y',NULL);

DELETE T_ENOLLMENT
WHERE ENROLL_ID = 20;

commit;